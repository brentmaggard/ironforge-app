import 'package:drift/drift.dart';
import 'package:uuid/uuid.dart';
import 'database.dart';

class ExerciseSeeder {
  static const _uuid = Uuid();

  static List<ExercisesCompanion> get seedData => [
    // CHEST EXERCISES
    ..._chestExercises,
    // BACK EXERCISES  
    ..._backExercises,
    // SHOULDER EXERCISES
    ..._shoulderExercises,
    // ARM EXERCISES
    ..._armExercises,
    // LEG EXERCISES
    ..._legExercises,
    // CORE EXERCISES
    ..._coreExercises,
    // CARDIO EXERCISES
    ..._cardioExercises,
    // FULL BODY EXERCISES
    ..._fullBodyExercises,
  ];

  static List<ExercisesCompanion> get _chestExercises => [
    _createExercise(
      name: 'Barbell Bench Press',
      category: 'compound',
      primaryMuscleGroup: 'chest',
      secondaryMuscleGroups: ['shoulders', 'triceps'],
      equipment: 'barbell',
      instructions: 'Lie on bench, grip bar slightly wider than shoulders, lower to chest, press up explosively.',
      tips: 'Keep feet planted, maintain arch in lower back, control the descent.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Dumbbell Bench Press',
      category: 'compound',
      primaryMuscleGroup: 'chest',
      secondaryMuscleGroups: ['shoulders', 'triceps'],
      equipment: 'dumbbells',
      instructions: 'Lie on bench with dumbbells, press up and slightly together at top.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Incline Barbell Press',
      category: 'compound',
      primaryMuscleGroup: 'chest',
      secondaryMuscleGroups: ['shoulders', 'triceps'],
      equipment: 'barbell',
      instructions: 'Set bench to 30-45 degrees, press barbell from upper chest.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Incline Dumbbell Press',
      category: 'compound',
      primaryMuscleGroup: 'chest',
      secondaryMuscleGroups: ['shoulders', 'triceps'],
      equipment: 'dumbbells',
      instructions: 'Incline bench press with dumbbells for greater range of motion.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Decline Barbell Press',
      category: 'compound',
      primaryMuscleGroup: 'chest',
      secondaryMuscleGroups: ['shoulders', 'triceps'],
      equipment: 'barbell',
      instructions: 'Decline bench set to -15 to -30 degrees, targets lower chest.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Push-ups',
      category: 'compound',
      primaryMuscleGroup: 'chest',
      secondaryMuscleGroups: ['shoulders', 'triceps', 'core'],
      equipment: 'bodyweight',
      instructions: 'Standard push-up position, lower chest to floor, push up.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Dumbbell Flyes',
      category: 'isolation',
      primaryMuscleGroup: 'chest',
      secondaryMuscleGroups: [],
      equipment: 'dumbbells',
      instructions: 'Lie on bench, lower dumbbells in wide arc, feel stretch in chest.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Cable Crossover',
      category: 'isolation',
      primaryMuscleGroup: 'chest',
      secondaryMuscleGroups: [],
      equipment: 'cable',
      instructions: 'High pulley position, cross cables in front of chest.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Chest Dips',
      category: 'compound',
      primaryMuscleGroup: 'chest',
      secondaryMuscleGroups: ['shoulders', 'triceps'],
      equipment: 'bodyweight',
      instructions: 'Lean forward on parallel bars, dip down and press up.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Pec Deck Machine',
      category: 'isolation',
      primaryMuscleGroup: 'chest',
      secondaryMuscleGroups: [],
      equipment: 'machine',
      instructions: 'Seated pec deck, bring arms together in front of chest.',
      difficulty: 'beginner',
    ),
  ];

  static List<ExercisesCompanion> get _backExercises => [
    _createExercise(
      name: 'Deadlift',
      category: 'compound',
      primaryMuscleGroup: 'back',
      secondaryMuscleGroups: ['legs', 'glutes', 'core'],
      equipment: 'barbell',
      instructions: 'Hip hinge movement, keep bar close to body, drive through heels.',
      tips: 'Keep neutral spine, engage lats, full body tension.',
      difficulty: 'advanced',
    ),
    _createExercise(
      name: 'Pull-ups',
      category: 'compound',
      primaryMuscleGroup: 'back',
      secondaryMuscleGroups: ['biceps'],
      equipment: 'bodyweight',
      instructions: 'Hang from bar, pull body up until chin clears bar.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Chin-ups',
      category: 'compound',
      primaryMuscleGroup: 'back',
      secondaryMuscleGroups: ['biceps'],
      equipment: 'bodyweight',
      instructions: 'Underhand grip pull-ups, emphasizes biceps more.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Barbell Rows',
      category: 'compound',
      primaryMuscleGroup: 'back',
      secondaryMuscleGroups: ['biceps', 'rear delts'],
      equipment: 'barbell',
      instructions: 'Bent over position, row bar to lower chest/upper abdomen.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'T-Bar Row',
      category: 'compound',
      primaryMuscleGroup: 'back',
      secondaryMuscleGroups: ['biceps', 'rear delts'],
      equipment: 'barbell',
      instructions: 'Chest supported or bent over T-bar row.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Seated Cable Row',
      category: 'compound',
      primaryMuscleGroup: 'back',
      secondaryMuscleGroups: ['biceps', 'rear delts'],
      equipment: 'cable',
      instructions: 'Seated position, pull cable handle to lower chest.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Lat Pulldown',
      category: 'compound',
      primaryMuscleGroup: 'back',
      secondaryMuscleGroups: ['biceps'],
      equipment: 'cable',
      instructions: 'Wide grip pulldown to upper chest, lean back slightly.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Dumbbell Rows',
      category: 'compound',
      primaryMuscleGroup: 'back',
      secondaryMuscleGroups: ['biceps', 'rear delts'],
      equipment: 'dumbbells',
      instructions: 'Single arm or bent over rows with dumbbells.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Face Pulls',
      category: 'isolation',
      primaryMuscleGroup: 'back',
      secondaryMuscleGroups: ['rear delts'],
      equipment: 'cable',
      instructions: 'High cable position, pull rope to face level.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Reverse Flyes',
      category: 'isolation',
      primaryMuscleGroup: 'back',
      secondaryMuscleGroups: ['rear delts'],
      equipment: 'dumbbells',
      instructions: 'Bent over, reverse fly motion with dumbbells.',
      difficulty: 'beginner',
    ),
  ];

  static List<ExercisesCompanion> get _shoulderExercises => [
    _createExercise(
      name: 'Military Press',
      category: 'compound',
      primaryMuscleGroup: 'shoulders',
      secondaryMuscleGroups: ['triceps', 'core'],
      equipment: 'barbell',
      instructions: 'Standing overhead press with barbell.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Seated Dumbbell Press',
      category: 'compound',
      primaryMuscleGroup: 'shoulders',
      secondaryMuscleGroups: ['triceps'],
      equipment: 'dumbbells',
      instructions: 'Seated shoulder press with dumbbells.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Lateral Raises',
      category: 'isolation',
      primaryMuscleGroup: 'shoulders',
      secondaryMuscleGroups: [],
      equipment: 'dumbbells',
      instructions: 'Raise dumbbells to side until parallel to floor.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Front Raises',
      category: 'isolation',
      primaryMuscleGroup: 'shoulders',
      secondaryMuscleGroups: [],
      equipment: 'dumbbells',
      instructions: 'Raise dumbbells in front to shoulder height.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Rear Delt Flyes',
      category: 'isolation',
      primaryMuscleGroup: 'shoulders',
      secondaryMuscleGroups: ['back'],
      equipment: 'dumbbells',
      instructions: 'Bent over rear deltoid flyes.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Upright Rows',
      category: 'compound',
      primaryMuscleGroup: 'shoulders',
      secondaryMuscleGroups: ['traps'],
      equipment: 'barbell',
      instructions: 'Pull barbell up along body to chin level.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Arnold Press',
      category: 'compound',
      primaryMuscleGroup: 'shoulders',
      secondaryMuscleGroups: ['triceps'],
      equipment: 'dumbbells',
      instructions: 'Rotating dumbbell press from front to overhead.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Pike Push-ups',
      category: 'compound',
      primaryMuscleGroup: 'shoulders',
      secondaryMuscleGroups: ['triceps'],
      equipment: 'bodyweight',
      instructions: 'Inverted V position, lower head toward floor.',
      difficulty: 'intermediate',
    ),
  ];

  static List<ExercisesCompanion> get _armExercises => [
    // BICEPS
    _createExercise(
      name: 'Barbell Curls',
      category: 'isolation',
      primaryMuscleGroup: 'biceps',
      secondaryMuscleGroups: [],
      equipment: 'barbell',
      instructions: 'Standing bicep curls with barbell.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Dumbbell Curls',
      category: 'isolation',
      primaryMuscleGroup: 'biceps',
      secondaryMuscleGroups: [],
      equipment: 'dumbbells',
      instructions: 'Alternating or simultaneous dumbbell curls.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Hammer Curls',
      category: 'isolation',
      primaryMuscleGroup: 'biceps',
      secondaryMuscleGroups: ['forearms'],
      equipment: 'dumbbells',
      instructions: 'Neutral grip dumbbell curls.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Preacher Curls',
      category: 'isolation',
      primaryMuscleGroup: 'biceps',
      secondaryMuscleGroups: [],
      equipment: 'barbell',
      instructions: 'Curls performed on preacher bench.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Cable Curls',
      category: 'isolation',
      primaryMuscleGroup: 'biceps',
      secondaryMuscleGroups: [],
      equipment: 'cable',
      instructions: 'Standing cable curls with constant tension.',
      difficulty: 'beginner',
    ),

    // TRICEPS
    _createExercise(
      name: 'Close Grip Bench Press',
      category: 'compound',
      primaryMuscleGroup: 'triceps',
      secondaryMuscleGroups: ['chest', 'shoulders'],
      equipment: 'barbell',
      instructions: 'Narrow grip bench press targeting triceps.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Tricep Dips',
      category: 'compound',
      primaryMuscleGroup: 'triceps',
      secondaryMuscleGroups: ['shoulders'],
      equipment: 'bodyweight',
      instructions: 'Dips on parallel bars or bench.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Overhead Tricep Extension',
      category: 'isolation',
      primaryMuscleGroup: 'triceps',
      secondaryMuscleGroups: [],
      equipment: 'dumbbells',
      instructions: 'Overhead extension with dumbbell or barbell.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Tricep Pushdowns',
      category: 'isolation',
      primaryMuscleGroup: 'triceps',
      secondaryMuscleGroups: [],
      equipment: 'cable',
      instructions: 'Cable pushdowns with rope or bar.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Diamond Push-ups',
      category: 'compound',
      primaryMuscleGroup: 'triceps',
      secondaryMuscleGroups: ['chest', 'shoulders'],
      equipment: 'bodyweight',
      instructions: 'Push-ups with hands in diamond shape.',
      difficulty: 'intermediate',
    ),

    // FOREARMS
    _createExercise(
      name: 'Wrist Curls',
      category: 'isolation',
      primaryMuscleGroup: 'forearms',
      secondaryMuscleGroups: [],
      equipment: 'dumbbells',
      instructions: 'Seated wrist curls for forearm development.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Reverse Wrist Curls',
      category: 'isolation',
      primaryMuscleGroup: 'forearms',
      secondaryMuscleGroups: [],
      equipment: 'dumbbells',
      instructions: 'Reverse grip wrist curls.',
      difficulty: 'beginner',
    ),
  ];

  static List<ExercisesCompanion> get _legExercises => [
    _createExercise(
      name: 'Back Squat',
      category: 'compound',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: ['glutes', 'core'],
      equipment: 'barbell',
      instructions: 'Barbell on upper back, squat down keeping knees tracking over toes.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Front Squat',
      category: 'compound',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: ['glutes', 'core'],
      equipment: 'barbell',
      instructions: 'Barbell held in front rack position.',
      difficulty: 'advanced',
    ),
    _createExercise(
      name: 'Leg Press',
      category: 'compound',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: ['glutes'],
      equipment: 'machine',
      instructions: 'Seated leg press on machine.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Romanian Deadlift',
      category: 'compound',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: ['glutes', 'back'],
      equipment: 'barbell',
      instructions: 'Hip hinge movement targeting hamstrings.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Walking Lunges',
      category: 'compound',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: ['glutes'],
      equipment: 'bodyweight',
      instructions: 'Alternating forward lunges with walking motion.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Bulgarian Split Squats',
      category: 'compound',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: ['glutes'],
      equipment: 'bodyweight',
      instructions: 'Rear foot elevated single leg squats.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Leg Curls',
      category: 'isolation',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: [],
      equipment: 'machine',
      instructions: 'Hamstring curls on lying or seated machine.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Leg Extensions',
      category: 'isolation',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: [],
      equipment: 'machine',
      instructions: 'Seated leg extensions targeting quadriceps.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Calf Raises',
      category: 'isolation',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: [],
      equipment: 'bodyweight',
      instructions: 'Standing or seated calf raises.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Goblet Squats',
      category: 'compound',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: ['glutes', 'core'],
      equipment: 'dumbbells',
      instructions: 'Squat holding dumbbell at chest level.',
      difficulty: 'beginner',
    ),
  ];

  static List<ExercisesCompanion> get _coreExercises => [
    _createExercise(
      name: 'Plank',
      category: 'isolation',
      primaryMuscleGroup: 'core',
      secondaryMuscleGroups: ['shoulders'],
      equipment: 'bodyweight',
      instructions: 'Hold plank position maintaining straight body.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Crunches',
      category: 'isolation',
      primaryMuscleGroup: 'core',
      secondaryMuscleGroups: [],
      equipment: 'bodyweight',
      instructions: 'Basic abdominal crunches.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Russian Twists',
      category: 'isolation',
      primaryMuscleGroup: 'core',
      secondaryMuscleGroups: [],
      equipment: 'bodyweight',
      instructions: 'Seated twisting motion targeting obliques.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Mountain Climbers',
      category: 'compound',
      primaryMuscleGroup: 'core',
      secondaryMuscleGroups: ['legs', 'shoulders'],
      equipment: 'bodyweight',
      instructions: 'Running motion in plank position.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Dead Bug',
      category: 'isolation',
      primaryMuscleGroup: 'core',
      secondaryMuscleGroups: [],
      equipment: 'bodyweight',
      instructions: 'Lying position, opposite arm and leg extensions.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Hanging Leg Raises',
      category: 'isolation',
      primaryMuscleGroup: 'core',
      secondaryMuscleGroups: [],
      equipment: 'bodyweight',
      instructions: 'Hang from bar, raise knees to chest.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Ab Wheel Rollouts',
      category: 'compound',
      primaryMuscleGroup: 'core',
      secondaryMuscleGroups: ['shoulders', 'back'],
      equipment: 'ab wheel',
      instructions: 'Roll ab wheel forward and back maintaining control.',
      difficulty: 'advanced',
    ),
    _createExercise(
      name: 'Side Plank',
      category: 'isolation',
      primaryMuscleGroup: 'core',
      secondaryMuscleGroups: [],
      equipment: 'bodyweight',
      instructions: 'Hold side plank targeting obliques.',
      difficulty: 'beginner',
    ),
  ];

  static List<ExercisesCompanion> get _cardioExercises => [
    _createExercise(
      name: 'Running',
      category: 'cardio',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: ['core'],
      equipment: 'bodyweight',
      instructions: 'Steady state or interval running.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Cycling',
      category: 'cardio',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: [],
      equipment: 'bike',
      instructions: 'Stationary or outdoor cycling.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Rowing',
      category: 'cardio',
      primaryMuscleGroup: 'back',
      secondaryMuscleGroups: ['legs', 'arms'],
      equipment: 'machine',
      instructions: 'Full body rowing machine exercise.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Burpees',
      category: 'compound',
      primaryMuscleGroup: 'full body',
      secondaryMuscleGroups: [],
      equipment: 'bodyweight',
      instructions: 'Squat, plank, push-up, jump sequence.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Jumping Jacks',
      category: 'cardio',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: ['shoulders'],
      equipment: 'bodyweight',
      instructions: 'Jump while spreading legs and raising arms.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'High Knees',
      category: 'cardio',
      primaryMuscleGroup: 'legs',
      secondaryMuscleGroups: ['core'],
      equipment: 'bodyweight',
      instructions: 'Running in place with high knee lifts.',
      difficulty: 'beginner',
    ),
    _createExercise(
      name: 'Battle Ropes',
      category: 'cardio',
      primaryMuscleGroup: 'arms',
      secondaryMuscleGroups: ['core', 'shoulders'],
      equipment: 'battle ropes',
      instructions: 'Wave, slam, or spiral rope movements.',
      difficulty: 'intermediate',
    ),
  ];

  static List<ExercisesCompanion> get _fullBodyExercises => [
    _createExercise(
      name: 'Clean and Press',
      category: 'compound',
      primaryMuscleGroup: 'full body',
      secondaryMuscleGroups: [],
      equipment: 'barbell',
      instructions: 'Olympic lift combining clean and overhead press.',
      difficulty: 'advanced',
    ),
    _createExercise(
      name: 'Thrusters',
      category: 'compound',
      primaryMuscleGroup: 'full body',
      secondaryMuscleGroups: [],
      equipment: 'dumbbells',
      instructions: 'Squat to overhead press in one motion.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Turkish Get-ups',
      category: 'compound',
      primaryMuscleGroup: 'full body',
      secondaryMuscleGroups: [],
      equipment: 'kettlebell',
      instructions: 'Complex movement from lying to standing.',
      difficulty: 'advanced',
    ),
    _createExercise(
      name: 'Kettlebell Swings',
      category: 'compound',
      primaryMuscleGroup: 'glutes',
      secondaryMuscleGroups: ['back', 'core'],
      equipment: 'kettlebell',
      instructions: 'Hip hinge swing motion with kettlebell.',
      difficulty: 'intermediate',
    ),
    _createExercise(
      name: 'Man Makers',
      category: 'compound',
      primaryMuscleGroup: 'full body',
      secondaryMuscleGroups: [],
      equipment: 'dumbbells',
      instructions: 'Burpee with dumbbell rows and overhead press.',
      difficulty: 'advanced',
    ),
  ];

  static ExercisesCompanion _createExercise({
    required String name,
    required String category,
    required String primaryMuscleGroup,
    required List<String> secondaryMuscleGroups,
    required String equipment,
    required String instructions,
    String? tips,
    required String difficulty,
  }) {
    return ExercisesCompanion.insert(
      id: _uuid.v4(),
      name: name,
      category: category,
      primaryMuscleGroup: primaryMuscleGroup,
      secondaryMuscleGroups: Value(secondaryMuscleGroups.isNotEmpty
          ? '["${secondaryMuscleGroups.join('","')}"]'
          : null),
      equipment: equipment,
      instructions: Value(instructions),
      tips: Value(tips),
      difficulty: Value(difficulty),
      isCustom: Value(false),
    );
  }
}